resources:
  repositories:
  - repository: openvino
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/openvino

  - repository: testdata
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/testdata

jobs:
- job: Win
  # About 150% of total time
  timeoutInMinutes: 120

  pool:
    name: WIN_VMSS_VENV_F8S_WU2

  variables:
    system.debug: true
    VSTS_HTTP_RETRY: 5
    VSTS_HTTP_TIMEOUT: 200
    WORKERS_NUMBER: 8
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    OPENVINO_REPO_DIR: $(REPO_DIR)\..\openvino
    MODELS_PATH: $(REPO_DIR)\..\testdata
    WORK_DIR: $(Pipeline.Workspace)\_w
    BUILD_DIR: D:\build
    BIN_DIR: $(OPENVINO_REPO_DIR)\bin\intel64
    MSVS_VARS_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
    MSVC_COMPILER_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\bin\Hostx64\x64\cl.exe

  steps:
  - script: |
      powershell -command "Invoke-RestMethod -Headers @{\"Metadata\"=\"true\"} -Method GET -Uri http://169.254.169.254/metadata/instance/compute?api-version=2019-06-01 | format-custom"
      where python3
      where python
      python --version
      where java
      java -version
      wmic computersystem get TotalPhysicalMemory
      wmic cpu list
      wmic logicaldisk get description,name
      wmic VOLUME list
      set
    displayName: 'System info'

  - script: |
      rd /Q /S $(WORK_DIR) & mkdir $(WORK_DIR)
      rd /Q /S $(BUILD_DIR) & mkdir $(BUILD_DIR)
    displayName: 'Make dir'

  - checkout: self
    clean: true
    lfs: false
    submodules: recursive
    path: openvino_contrib

  - checkout: openvino
    clean: true
    lfs: false
    submodules: recursive
    path: openvino

  - checkout: testdata
    clean: true
    lfs: true
    path: testdata

  - script: |
      certutil -urlcache -split -f https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-win.zip ninja-win.zip
      powershell -command "Expand-Archive -Force ninja-win.zip"
    workingDirectory: $(WORK_DIR)
    displayName: 'Install dependencies'

  - script: |
      certutil -urlcache -split -f https://openvinoweb.z5.web.core.windows.net/incredibuild/install_ib_console.bat install_ib_console.bat
      call install_ib_console.bat
    workingDirectory: $(WORK_DIR)
    displayName: 'Install IncrediBuild'

  - script: |
      set PATH=$(WORK_DIR)\ninja-win;%PATH%
      call "$(MSVS_VARS_PATH)" && cmake -GNinja -DNGRAPH_ONNX_IMPORT_ENABLE=OFF -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) -DIE_EXTRA_MODULES=$(REPO_DIR)/modules -DCMAKE_C_COMPILER:PATH="$(MSVC_COMPILER_PATH)" -DCMAKE_CXX_COMPILER:PATH="$(MSVC_COMPILER_PATH)" $(OPENVINO_REPO_DIR)
    workingDirectory: $(BUILD_DIR)
    displayName: 'CMake'

  - script: |
      set PATH=$(WORK_DIR)\ninja-win;%PATH%
      call "$(MSVS_VARS_PATH)" && "C:\Program Files (x86)\IncrediBuild\BuildConsole.exe" /COMMAND="ninja" /MaxCPUS=40
    workingDirectory: $(BUILD_DIR)
    displayName: 'Build Win'

  - script: echo Stop IncrediBuild_Agent && net stop IncrediBuild_Agent
    displayName: Stop IncrediBuild
    continueOnError: true
    enabled: false

  - script: dir $(OPENVINO_REPO_DIR)\bin\ /s
    displayName: 'List files'

  - script: |
      mkdir native
      copy $(BIN_DIR)\*.dll native
      copy $(BIN_DIR)\cache.json native
      copy $(BIN_DIR)\plugins.xml native
      copy $(BIN_DIR)\*.mvcmd native
      copy $(OPENVINO_REPO_DIR)\inference-engine\temp\tbb\bin\tbb.dll native
      copy $(OPENVINO_REPO_DIR)\inference-engine\temp\tbb\bin\tbbmalloc.dll native
      dir /b /a-d native >resources_list.txt
      move resources_list.txt native
      gradle clean build -Prun_tests -DMODELS_PATH=$(MODELS_PATH) -Ddevice=CPU --info
    workingDirectory: $(REPO_DIR)\modules\java_api
    displayName: 'Java tests'

  - script: |
      set PATH=$(WORK_DIR)\ninja-win;%PATH%
      call "$(MSVS_VARS_PATH)" && cmake -GNinja -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) -DInferenceEngine_DIR=$(BUILD_DIR) -Dngraph_DIR=$(BUILD_DIR)\ngraph -DCMAKE_C_COMPILER:PATH="$(MSVC_COMPILER_PATH)" -DCMAKE_CXX_COMPILER:PATH="$(MSVC_COMPILER_PATH)" user_ie_extensions
    workingDirectory: $(REPO_DIR)\modules\custom_layers
    displayName: '[CMake] Custom layers module'

  - script: |
      set PATH=$(WORK_DIR)\ninja-win;%PATH%
      call "$(MSVS_VARS_PATH)" && "C:\Program Files (x86)\IncrediBuild\BuildConsole.exe" /COMMAND="ninja" /MaxCPUS=40
      dir .
      dir $(BIN_DIR)
      set EXT_LIB=user_cpu_extension.dll
      python3 setup.py build bdist_wheel
    workingDirectory: $(REPO_DIR)\modules\custom_layers
    displayName: '[Build] Custom layers module'

  - script: |
      python3 -m pip install ..\dist\*.whl
      python3 run_tests.py
    env:
      LD_LIBRARY_PATH: $(BIN_DIR)\lib
      PYTHONPATH: "$(OPENVINO_REPO_DIR)\model-optimizer:$(BIN_DIR)\lib\python_api\python3.6"
    workingDirectory: $(REPO_DIR)\modules\custom_layers\test
    displayName: '[Test] Custom layers module'
